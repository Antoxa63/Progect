[![asciicast](https://asciinema.org/a/zPm4FriFbBTWxd3EtfwvUhhtZ.svg)](https://asciinema.org/a/zPm4FriFbBTWxd3EtfwvUhhtZ)

const numberNod = (a, b) => { 
    if (b > a) {let temp = a; a = b; b = temp;}
    while (true) {
        if (b === 0) return a;
        a %= b;
        if (a === 0) return b;
        b %= a;
    }
}


const description = 'What number is missing in the progression?';

const generateQuestionAnswer = () => {
  const fromNumber = 0;

  const firstNumber = getRandomNumber(fromNumber);
  const secondNumber = getRandomNumber(fromNumber);

  const question = `${firstNumber} ${secondNumber}`;
  const answer = numberNod(firstNumber, secondNumber).toString();

  return [question, answer];
};


const progres = (x, y) => {
  
 let result = [] 
 while(result.length <= 10 )  {   
   x = x + y
   result.push(x)
 }
console.log(result[3])
  let z = '..'
  result[3] = z
  result = result.toString()  
  return result
}

console.log(progres(12, 36))


const getRandomNumber = (min, max = 10) => Math.floor(min + Math.random() * (max + 1 - min));
const getRandomNumberLength = (min, max = 9) => Math.floor(min + Math.random() * (max + 1 - min));

const fromNumber = 0;
const x = getRandomNumber(fromNumber);
const y = getRandomNumber(fromNumber);
const strNumber = getRandomNumberLength(fromNumber);

const progres = (x, y) => {  
 let result = [] 
 while(result.length <= 10 )  {   
   x = x + y
   result.push(x)
 }

  return result
}

const generateQuestionAnswer = () => {
let question = progres(x, y)
console.log(question)
const answer = question[strNumber]
let z = '..'
question[strNumber] = z

 

  return [question, answer];
};
console.log(generateQuestionAnswer())


const progres = (x, y) => {  
 let result = [] 
 while(result.length <= 10 )  {   
   x = x + y
   result.push(x)
 }
  return result
}
const getRandomNumber = (min, max = 10) => Math.floor(min + Math.random() * (max + 1 - min));
const getRandomNumberLength = (min, max = 8) => Math.floor(min + Math.random() * (max + 1 - min));

const description = 'What number is missing in the progression?';

const generateQuestionAnswer = () => {
  const fromNumber = 0;

  const firstNumber = getRandomNumber(fromNumber);
  const secondNumber = getRandomNumber(fromNumber);
  const str = getRandomNumberLength(fromNumber)
  let z = ".."

  let answer = progres(firstNumber, secondNumber)
  const qiestion = answer[str].toString()
  answer[str] = z 
  answer = answer.toString()
  return [answer, qiestion];
};
console.log(generateQuestionAnswer())

111111

const prime = (num) => {
  for(let i = 2; i < num; i += 1){
if(num % i === 0) {
  return false
} 
}
  return true
}


